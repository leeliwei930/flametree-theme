(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{39:function(t,n,a){"use strict";var e=a(7);a.n(e).a},40:function(t,n,a){(t.exports=a(2)(!1)).push([t.i,".announcement-basic-card {\n  padding: 15px;\n  width: 480px;\n  height: 100%;\n  transition: all 0.25s;\n}\n.announcement-basic-card.hoverable:hover {\n  box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.5) !important;\n  transform: translateY(-5px);\n  -webkit-transform: translateY(-5px);\n  -moz-transform: translateY(-5px);\n}\n.announcement-basic-card .post-summary {\n  text-overflow: ellipsis;\n  word-break: break-word;\n}",""])},7:function(t,n,a){var e=a(40);"string"==typeof e&&(e=[[t.i,e,""]]);var s={hmr:!0,transform:void 0,insertInto:void 0};a(3)(e,s);e.locals&&(t.exports=e.locals)},90:function(t,n,a){"use strict";a.r(n);var e={props:{title:{type:String},description:{type:String},author:{type:String},publishedOn:{type:String},hoverable:{type:Boolean,default:!0}},data:function(){return{}},methods:{},created:function(){},mounted:function(){},updated:function(){}},s=(a(39),a(0)),r=Object(s.a)(e,function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("div",{staticClass:"announcement-basic-card d-flex flex-column shadow bg-light p-3",class:{hoverable:t.hoverable}},[a("h2",{staticClass:"post-title text-dark"},[t._v(t._s(t.title))]),a("p",{staticClass:"post-summary text-dark"},[t._v(t._s(t.description))]),a("p",[a("i",{staticClass:"fas fa-user text-accent mr-2"}),t._v(t._s(t.author))]),a("div",{staticClass:"d-flex flex-column justify-content-start flex-wrap"},[a("p",[a("i",{staticClass:"fas fa-calendar text-accent mr-2"}),t._v(t._s(t.publishedOn))]),t._t("default")],2)])},[],!1,null,null,null);n.default=r.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,