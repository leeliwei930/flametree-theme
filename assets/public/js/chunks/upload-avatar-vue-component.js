(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{101:function(t,e,a){"use strict";a.r(e);var r=a(30),n=a.n(r),i=a(31),s=a.n(i),o={components:{popper:n.a,"vue-cropper":s.a},props:{defaultAvatarUrl:{type:String},dataRequestHandler:{type:String},altAvatar:{type:String,default:"User Avatar"},fieldName:{type:String,default:"avatar"},fieldId:{type:String,default:"avatar"}},data:function(){return{showUploadDialog:!1,avatarImage:null,isCropped:!1,afterSelectImage:!1,popperOptions:{placement:"bottom",modifiers:[]}}},methods:{avatarChanged:function(t){var e=this;if(null!=t.target.files&&1==t.target.files.length){var a=t.target.files[0];if(-1===a.type.indexOf("image/"))return;this.afterSelectImage=!0;var r=new FileReader;r.onload=function(t){e.avatarImage=t.target.result,e.$refs.cropper.replace(t.target.result)},r.readAsDataURL(a)}},openFilePicker:function(){document.getElementById("_"+this.fieldId).click()},cropAvatar:function(){this.isCropped=!0,this.avatarImage=this.$refs.cropper.getCroppedCanvas().toDataURL()}},created:function(){},mounted:function(){},updated:function(){},computed:{getFieldName:function(){return this.afterSelectImage?this.fieldName:"_"+this.fieldName}}},l=(a(55),a(0)),p=Object(l.a)(o,function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"d-flex align-self-center",staticStyle:{position:"relative"}},[a("popper",{attrs:{options:t.popperOptions}},[a("div",{staticClass:"popper border-0 p-0 bg-transparent shadow-none my-3"},[t.afterSelectImage?a("div",{staticClass:"bg-white shadow-sm popover-cropper p-2 d-flex flex-column"},[a("div",{staticClass:"d-flex justify-content-start"},[a("strong",{staticClass:"heading text-uppercase text-secondary my-2"},[a("i",{staticClass:"fas fa-crop mx-2 text-light-dark"}),t._v("CROP IMAGE")])]),a("div",{staticClass:"d-flex flex-grow-1"},[a("vue-cropper",{ref:"cropper",attrs:{src:t.avatarImage,preview:"#preview-"+t.fieldId,"aspect-ratio":1,cropmove:function(){return t.isCropped=!1},minContainerHeight:180}})],1),a("div",{staticClass:"d-flex flex-row"},[t.isCropped?a("button",{staticClass:"col btn btn-success rounded-0",on:{click:function(t){return t.preventDefault(),null}}},[t._v("DONE")]):a("button",{staticClass:"col btn btn-primary rounded-0",on:{click:function(e){return e.preventDefault(),t.cropAvatar(e)}}},[t._v("CROP")]),a("button",{staticClass:"col btn btn-secondary rounded-0"},[t._v("RESET")])])]):a("div",{staticClass:"d-flex flex-column rounded-pill bg-dark p-2"},[a("strong",{staticClass:"text-white"},[t._v("Select Image")])])]),a("div",{staticClass:"avatar",attrs:{slot:"reference"},on:{click:t.openFilePicker},slot:"reference"},[a("div",{staticClass:"avatar-preview rounded-full",attrs:{id:"preview-"+t.fieldId}},[a("img",{directives:[{name:"show",rawName:"v-show",value:!t.afterSelectImage,expression:"!afterSelectImage"}],attrs:{src:t.defaultAvatarUrl}})]),a("input",{staticClass:"d-none",attrs:{type:"file",accept:"image/*",name:t.getFieldName,id:"_"+t.fieldId},on:{change:t.avatarChanged}})])])],1)},[],!1,null,"39629a74",null);e.default=p.exports},14:function(t,e,a){var r=a(56);"string"==typeof r&&(r=[[t.i,r,""]]);var n={hmr:!0,transform:void 0,insertInto:void 0};a(3)(r,n);r.locals&&(t.exports=r.locals)},55:function(t,e,a){"use strict";var r=a(14);a.n(r).a},56:function(t,e,a){(t.exports=a(2)(!1)).push([t.i,".flametree-theme .popper[data-v-39629a74] {\n  max-height: 250px !important;\n  max-width: 250px !important;\n}\n.avatar[data-v-39629a74] {\n  cursor: pointer;\n}\n.avatar .avatar-preview[data-v-39629a74] {\n  overflow: hidden;\n  height: 150px;\n  width: 150px;\n  border-radius: 100% 100% 100% 100%;\n  border: 1pt solid var(--light-silver-color-hex);\n  transition: all 0.25s ease-in-out;\n}\n.avatar .avatar-preview[data-v-39629a74]:hover {\n  border: 2pt solid var(--primary-color-hex);\n  transform: scale(1.02);\n  display: block;\n}",""])}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,