(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{37:function(e,a,n){"use strict";var t=n(6);n.n(t).a},38:function(e,a,n){(e.exports=n(2)(!1)).push([e.i,'.producer-card {\n  position: relative;\n  height: 320px;\n  overflow: hidden;\n  border-radius: 13pt;\n  transition: 0.25s all;\n}\n.producer-card[lazy=loaded] {\n  background-repeat: no-repeat;\n  background-size: cover;\n}\n.producer-card[lazy=loading] {\n  background-repeat: no-repeat;\n  background-size: cover;\n}\n.producer-card h5.origin-label {\n  font-family: "Nunito", sans-serif;\n  font-size: 12pt;\n  color: white;\n}\n.producer-card .producer-card-content {\n  z-index: 3;\n}\n.producer-card .producer-card-overlay {\n  position: absolute;\n  z-index: 1;\n  width: 100%;\n  height: 100%;\n  border-radius: 13pt;\n}\n.producer-card.hoverable:hover {\n  box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.5) !important;\n  transform: translateY(-5px);\n  -webkit-transform: translateY(-5px);\n  -moz-transform: translateY(-5px);\n}\n.producer-card .card-title {\n  font-family: "Lato Black", sans-serif;\n  font-size: 24pt;\n  color: white;\n  text-transform: uppercase;\n}\n.producer-card .subheading {\n  font-family: "Lato", sans-serif;\n  font-size: 16pt;\n  color: white;\n  text-transform: uppercase;\n}',""])},6:function(e,a,n){var t=n(38);"string"==typeof t&&(t=[[e.i,t,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(3)(t,r);t.locals&&(e.exports=t.locals)},89:function(e,a,n){"use strict";n.r(a);var t={props:{origin:{type:String,default:null},hoverable:{type:Boolean,default:!0},name:{type:String,default:"Card Title"},nameClass:{type:String},subheading:{type:String,default:null},dataImage:{type:String,default:""},image:{type:String,default:""},gradient:{type:String,default:"linear-gradient(0deg, rgba(0, 0, 0, 0.25), rgba(0, 0, 0, 0.5))"},width:{type:String,default:"100%"}},data:function(){return{imgObj:{src:null,loading:null}}},methods:{},created:function(){this.imgObj.src=this.dataImage,this.imgObj.loading=this.image},mounted:function(){},updated:function(){},computed:{bgOverlayStyle:function(){return"background-image:".concat(this.gradient,"; background-repeat:no-repeat; background-size:cover")}}},r=(n(37),n(0)),i=Object(r.a)(t,function(){var e=this,a=e.$createElement,n=e._self._c||a;return n("div",{directives:[{name:"lazy",rawName:"v-lazy:background-image",value:e.imgObj,expression:"imgObj",arg:"background-image"}],staticClass:"d-flex flex-column shadow justify-content-end align-items-start producer-card flex-wrap flex-grow-1 m-2",class:{hoverable:e.hoverable}},[n("div",{staticClass:"producer-card-content w-100"},[n("div",{staticClass:"d-flex flex-wrap flex-column flex-grow-1 align-items-start"},[e.origin?n("h5",{staticClass:"origin-label px-4 py-2"},[n("i",{staticClass:"fas fa-map-marker-alt mx-1"}),e._v(e._s(e.origin))]):e._e(),n("h2",{staticClass:"card-title px-4 py-2",class:e.nameClass},[e._v(e._s(e.name))]),n("div",{staticClass:"d-flex flex-row align-items-baseline justify-content-between"},[e.subheading?n("h3",{staticClass:"subheading px-4 py-2"},[e._v(e._s(e.subheading))]):e._e()]),e._t("actions")],2)]),n("div",{staticClass:"producer-card-overlay",style:e.bgOverlayStyle})])},[],!1,null,null,null);a.default=i.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,