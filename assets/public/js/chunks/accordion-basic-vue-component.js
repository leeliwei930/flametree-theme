(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{103:function(n,i,t){"use strict";t.r(i);var a={props:{title:{type:String,default:"Accordion Basic Title"},show:{type:Boolean,default:!1}},data:function(){return{active:!1}},methods:{emitClickEvent:function(){this.active=!this.active,this.$emit("click")}},created:function(){},mounted:function(){this.active=this.show},updated:function(){},computed:{buttonText:function(){return this.active?"fa-minus":"fa-plus"}}},o=(t(59),t(0)),e=Object(o.a)(a,function(){var n=this.$createElement,i=this._self._c||n;return i("div",{staticClass:"accordion-basic d-flex flex-column py-3",on:{click:this.emitClickEvent}},[i("div",{staticClass:"accordion-basic-header d-flex flex-row justify-content-between align-items-baseline"},[i("h4",[this._v(this._s(this.title))]),i("button",{staticClass:"btn btn-outline-primary accordion-basic-button px-3"},[i("i",{staticClass:"fas fa-1x",class:this.buttonText})])]),i("div",{staticClass:"accordion-basic-content p-2",class:this.active?"show":"hide"},[this._t("default")],2)])},[],!1,null,null,null);i.default=e.exports},16:function(n,i,t){var a=t(60);"string"==typeof a&&(a=[[n.i,a,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};t(3)(a,o);a.locals&&(n.exports=a.locals)},59:function(n,i,t){"use strict";var a=t(16);t.n(a).a},60:function(n,i,t){(n.exports=t(2)(!1)).push([n.i,'.accordion-basic {\n  border-bottom: 1pt solid var(--primary-color-hex);\n}\n.accordion-basic .accordion-basic-header {\n  font-family: "Baskerville", sans-serif;\n  cursor: pointer;\n}\n.accordion-basic .accordion-basic-content {\n  display: none;\n}\n.accordion-basic .accordion-basic-content.show {\n  -webkit-animation-name: showAccordian;\n          animation-name: showAccordian;\n  -webkit-animation-duration: 0.45s;\n          animation-duration: 0.45s;\n  -webkit-animation-fill-mode: forwards;\n          animation-fill-mode: forwards;\n  -webkit-animation-timing-function: ease-in;\n          animation-timing-function: ease-in;\n  display: inline;\n}\n.accordion-basic .accordion-basic-content.hide {\n  -webkit-animation-name: hideAccordian;\n          animation-name: hideAccordian;\n  -webkit-animation-duration: 0.45s;\n          animation-duration: 0.45s;\n  -webkit-animation-fill-mode: forwards;\n          animation-fill-mode: forwards;\n  -webkit-animation-timing-function: ease-in-out;\n          animation-timing-function: ease-in-out;\n}\n@-webkit-keyframes showAccordian {\nfrom {\n    height: 0;\n    opacity: 0;\n}\nto {\n    height: 100%;\n    opacity: 1;\n}\n}\n@keyframes showAccordian {\nfrom {\n    height: 0;\n    opacity: 0;\n}\nto {\n    height: 100%;\n    opacity: 1;\n}\n}\n@-webkit-keyframes hideAccordian {\nfrom {\n    height: 100%;\n    opacity: 1;\n}\nto {\n    height: 0;\n    opacity: 0;\n}\n}\n@keyframes hideAccordian {\nfrom {\n    height: 100%;\n    opacity: 1;\n}\nto {\n    height: 0;\n    opacity: 0;\n}\n}',""])}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hc3NldHMvanMvdnVlL2NvbXBvbmVudHMvYWNjb3JkaWFuL0FjY29yZGlvbkJhc2ljLnZ1ZT9mY2Y4Iiwid2VicGFjazovLy8uL2Fzc2V0cy9qcy92dWUvY29tcG9uZW50cy9hY2NvcmRpYW4vQWNjb3JkaW9uQmFzaWMudnVlPzg0MmQiLCJ3ZWJwYWNrOi8vL2Fzc2V0cy9qcy92dWUvY29tcG9uZW50cy9hY2NvcmRpYW4vQWNjb3JkaW9uQmFzaWMudnVlIiwid2VicGFjazovLy8uL2Fzc2V0cy9qcy92dWUvY29tcG9uZW50cy9hY2NvcmRpYW4vQWNjb3JkaW9uQmFzaWMudnVlIiwid2VicGFjazovLy8uL2Fzc2V0cy9qcy92dWUvY29tcG9uZW50cy9hY2NvcmRpYW4vQWNjb3JkaW9uQmFzaWMudnVlPzYxMDAiLCJ3ZWJwYWNrOi8vLy4vYXNzZXRzL2pzL3Z1ZS9jb21wb25lbnRzL2FjY29yZGlhbi9BY2NvcmRpb25CYXNpYy52dWU/MjgyNSIsIndlYnBhY2s6Ly8vLi9hc3NldHMvanMvdnVlL2NvbXBvbmVudHMvYWNjb3JkaWFuL0FjY29yZGlvbkJhc2ljLnZ1ZT83YTBiIl0sIm5hbWVzIjpbImNvbXBvbmVudCIsIl9oIiwidGhpcyIsIiRjcmVhdGVFbGVtZW50IiwiX2MiLCJfc2VsZiIsInN0YXRpY0NsYXNzIiwib24iLCJlbWl0Q2xpY2tFdmVudCIsIl92IiwiX3MiLCJ0aXRsZSIsImNsYXNzIiwiYnV0dG9uVGV4dCIsImFjdGl2ZSIsIl90IiwiY29udGVudCIsIm1vZHVsZSIsImkiLCJvcHRpb25zIiwidHJhbnNmb3JtIiwidW5kZWZpbmVkIiwibG9jYWxzIiwiZXhwb3J0cyIsInB1c2giXSwibWFwcGluZ3MiOiJpR0FBQSxJQ0EwTixFQ3NFMU4sQ0FDRSxNQUFGLENBQ0ksTUFBSixDQUNNLEtBQU4sT0FDTSxRQUFOLHlCQUVJLEtBQUosQ0FDTSxLQUFOLFFBQ00sU0FBTixJQUdFLEtBQUYsV0FDSSxNQUFKLENBQ00sUUFBTixJQUdFLFFBQUYsQ0FDSSxlQUFKLFdBQ00sS0FBTixvQkFDTSxLQUFOLGlCQUdFLFFBQUYsYUFHRSxRQUFGLFdBQ0ksS0FBSixrQkFFRSxRQUFGLGFBR0UsU0FBRixDQUNJLFdBQUosV0FDTSxPQUFOLG9DLGVDL0ZJQSxFQUFZLFlBQ2QsRUhUVyxXQUFhLElBQWlCQyxFQUFUQyxLQUFnQkMsZUFBbUJDLEVBQW5DRixLQUEwQ0csTUFBTUQsSUFBSUgsRUFBRyxPQUFPRyxFQUFHLE1BQU0sQ0FBQ0UsWUFBWSwwQ0FBMENDLEdBQUcsQ0FBQyxNQUFsSUwsS0FBOElNLGlCQUFpQixDQUFDSixFQUFHLE1BQU0sQ0FBQ0UsWUFBWSx1RkFBdUYsQ0FBQ0YsRUFBRyxLQUFLLENBQXRSRixLQUEyUk8sR0FBM1JQLEtBQWtTUSxHQUFsU1IsS0FBeVNTLFVBQVVQLEVBQUcsU0FBUyxDQUFDRSxZQUFZLHVEQUF1RCxDQUFDRixFQUFHLElBQUksQ0FBQ0UsWUFBWSxZQUFZTSxNQUFwYVYsS0FBOGFXLGlCQUFpQlQsRUFBRyxNQUFNLENBQUNFLFlBQVksOEJBQThCTSxNQUFuZlYsS0FBNmZZLE9BQVMsT0FBUyxRQUFRLENBQXZoQlosS0FBNGhCYSxHQUFHLFlBQVksTUFDdmpCLElHV3BCLEVBQ0EsS0FDQSxLQUNBLE1BSWEsVUFBQWYsRSw0QkNsQmYsSUFBSWdCLEVBQVUsRUFBUSxJQUVBLGlCQUFaQSxJQUFzQkEsRUFBVSxDQUFDLENBQUNDLEVBQU9DLEVBQUlGLEVBQVMsTUFPaEUsSUFBSUcsRUFBVSxDQUFDLEtBQU0sRUFFckIsZUFQSUMsRUFRSixnQkFBcUJDLEdBRVIsRUFBUSxFQUFSLENBQXNFTCxFQUFTRyxHQUV6RkgsRUFBUU0sU0FBUUwsRUFBT00sUUFBVVAsRUFBUU0sUyxnQ0NqQjVDLG1CQUE4YyxHLG9CQ0FwY0wsRUFBT00sUUFBVSxFQUFRLEVBQVIsRUFBa0UsSUFLckZDLEtBQUssQ0FBQ1AsRUFBT0MsRUFBSSx3aERBQTJoRCIsImZpbGUiOiJhc3NldHMvcHVibGljL2pzL2NodW5rcy9hY2NvcmRpb24tYmFzaWMtdnVlLWNvbXBvbmVudC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciByZW5kZXIgPSBmdW5jdGlvbiAoKSB7dmFyIF92bT10aGlzO3ZhciBfaD1fdm0uJGNyZWF0ZUVsZW1lbnQ7dmFyIF9jPV92bS5fc2VsZi5fY3x8X2g7cmV0dXJuIF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcImFjY29yZGlvbi1iYXNpYyBkLWZsZXggZmxleC1jb2x1bW4gcHktM1wiLG9uOntcImNsaWNrXCI6X3ZtLmVtaXRDbGlja0V2ZW50fX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImFjY29yZGlvbi1iYXNpYy1oZWFkZXIgZC1mbGV4IGZsZXgtcm93IGp1c3RpZnktY29udGVudC1iZXR3ZWVuIGFsaWduLWl0ZW1zLWJhc2VsaW5lXCJ9LFtfYygnaDQnLFtfdm0uX3YoX3ZtLl9zKF92bS50aXRsZSkpXSksX2MoJ2J1dHRvbicse3N0YXRpY0NsYXNzOlwiYnRuIGJ0bi1vdXRsaW5lLXByaW1hcnkgYWNjb3JkaW9uLWJhc2ljLWJ1dHRvbiBweC0zXCJ9LFtfYygnaScse3N0YXRpY0NsYXNzOlwiZmFzIGZhLTF4XCIsY2xhc3M6X3ZtLmJ1dHRvblRleHR9KV0pXSksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiYWNjb3JkaW9uLWJhc2ljLWNvbnRlbnQgcC0yXCIsY2xhc3M6X3ZtLmFjdGl2ZSA/ICdzaG93JyA6ICdoaWRlJ30sW192bS5fdChcImRlZmF1bHRcIildLDIpXSl9XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cblxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tNC0wIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vQWNjb3JkaW9uQmFzaWMudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTQtMCEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL0FjY29yZGlvbkJhc2ljLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiIsIjx0ZW1wbGF0ZSBsYW5nPVwicHVnXCI+XG4gICAgLmFjY29yZGlvbi1iYXNpYy5kLWZsZXguZmxleC1jb2x1bW4ucHktMyhAY2xpY2s9XCJlbWl0Q2xpY2tFdmVudFwiKVxuICAgICAgICAuYWNjb3JkaW9uLWJhc2ljLWhlYWRlci5kLWZsZXguZmxleC1yb3cuanVzdGlmeS1jb250ZW50LWJldHdlZW4uYWxpZ24taXRlbXMtYmFzZWxpbmVcbiAgICAgICAgICAgIGg0IHt7IHRpdGxlIH19XG4gICAgICAgICAgICBidXR0b24uYnRuLmJ0bi1vdXRsaW5lLXByaW1hcnkuYWNjb3JkaW9uLWJhc2ljLWJ1dHRvbi5weC0zXG4gICAgICAgICAgICAgICAgaS5mYXMuZmEtMXgoOmNsYXNzPVwiYnV0dG9uVGV4dFwiKVxuICAgICAgICAuYWNjb3JkaW9uLWJhc2ljLWNvbnRlbnQucC0yKDpjbGFzcz1cImFjdGl2ZSA/ICdzaG93JyA6ICdoaWRlJ1wiKVxuICAgICAgICAgICAgIHNsb3RcbjwvdGVtcGxhdGU+XG48c3R5bGUgbGFuZz1cInNjc3NcIj5cbi5hY2NvcmRpb24tYmFzaWMge1xuICAgIGJvcmRlci1ib3R0b206IDFwdCBzb2xpZCB2YXIoLS1wcmltYXJ5LWNvbG9yLWhleCk7XG4gICAgLmFjY29yZGlvbi1iYXNpYy1oZWFkZXIge1xuICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiQmFza2VydmlsbGVcIiwgc2Fucy1zZXJpZjtcblxuICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuXG4gICAgfVxuXG4gICAgLmFjY29yZGlvbi1iYXNpYy1jb250ZW50IHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcblxuICAgICAgICAmLnNob3cge1xuICAgICAgICAgICAgYW5pbWF0aW9uLW5hbWU6IHNob3dBY2NvcmRpYW47XG4gICAgICAgICAgICBhbmltYXRpb24tZHVyYXRpb246MC40NXM7XG4gICAgICAgICAgICBhbmltYXRpb24tZmlsbC1tb2RlOmZvcndhcmRzO1xuICAgICAgICAgICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1pbjtcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZTtcbiAgICAgICAgfVxuXG4gICAgICAgICYuaGlkZSAge1xuICAgICAgICAgICAgYW5pbWF0aW9uLW5hbWU6IGhpZGVBY2NvcmRpYW47XG4gICAgICAgICAgICBhbmltYXRpb24tZHVyYXRpb246MC40NXM7XG4gICAgICAgICAgICBhbmltYXRpb24tZmlsbC1tb2RlOmZvcndhcmRzO1xuXG4gICAgICAgICAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLWluLW91dDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC5hY2NvcmRpb24tYmFzaWMtYnV0dG9uIHtcbiAgICB9XG59XG5cbkBrZXlmcmFtZXMgc2hvd0FjY29yZGlhbiB7XG4gICAgZnJvbSB7XG4gICAgICAgIGhlaWdodDogMDtcbiAgICAgICAgb3BhY2l0eTogMDtcblxuICAgIH1cbiAgICB0byB7XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgb3BhY2l0eTogMTtcblxuICAgIH1cbn1cbkBrZXlmcmFtZXMgaGlkZUFjY29yZGlhbiB7XG4gICAgZnJvbSB7XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgb3BhY2l0eTogMTtcblxuICAgIH1cbiAgICB0byB7XG4gICAgICAgIGhlaWdodDogMDtcbiAgICAgICAgb3BhY2l0eTogMDtcblxuICAgIH1cbn1cblxuPC9zdHlsZT5cbjxzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPlxuZXhwb3J0IGRlZmF1bHQge1xuICAgIHByb3BzOiB7XG4gICAgICAgIHRpdGxlOiB7XG4gICAgICAgICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICAgICAgICBkZWZhdWx0OiBcIkFjY29yZGlvbiBCYXNpYyBUaXRsZVwiXG4gICAgICAgIH0sXG4gICAgICAgIHNob3c6IHtcbiAgICAgICAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICAgICAgICBkZWZhdWx0OiBmYWxzZVxuICAgICAgICB9XG4gICAgfSxcbiAgICBkYXRhOiBmdW5jdGlvbigpe1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgYWN0aXZlOiBmYWxzZVxuICAgICAgICB9XG4gICAgfSxcbiAgICBtZXRob2RzOiB7XG4gICAgICAgIGVtaXRDbGlja0V2ZW50OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB0aGlzLmFjdGl2ZSA9ICF0aGlzLmFjdGl2ZVxuICAgICAgICAgICAgdGhpcy4kZW1pdCgnY2xpY2snKVxuICAgICAgICB9XG4gICAgfSxcbiAgICBjcmVhdGVkOiBmdW5jdGlvbigpe1xuXG4gICAgfSxcbiAgICBtb3VudGVkOiBmdW5jdGlvbigpe1xuICAgICAgICB0aGlzLmFjdGl2ZSA9IHRoaXMuc2hvdztcbiAgICB9LFxuICAgIHVwZGF0ZWQ6IGZ1bmN0aW9uKCl7XG5cbiAgICB9LFxuICAgIGNvbXB1dGVkOiB7XG4gICAgICAgIGJ1dHRvblRleHQ6IGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5hY3RpdmUgPyAnZmEtbWludXMnIDogJ2ZhLXBsdXMnXG4gICAgICAgIH0sXG4gICAgfVxufVxuXG48L3NjcmlwdD5cbiIsImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vQWNjb3JkaW9uQmFzaWMudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTNiN2ZiYmEwJmxhbmc9cHVnJlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL0FjY29yZGlvbkJhc2ljLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vQWNjb3JkaW9uQmFzaWMudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5pbXBvcnQgc3R5bGUwIGZyb20gXCIuL0FjY29yZGlvbkJhc2ljLnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmxhbmc9c2NzcyZcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGxcbiAgXG4pXG5cbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTktMiEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tOS0zIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vQWNjb3JkaW9uQmFzaWMudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmbGFuZz1zY3NzJlwiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOS0yIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS05LTMhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9BY2NvcmRpb25CYXNpYy52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZsYW5nPXNjc3MmXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOS0yIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS05LTMhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9BY2NvcmRpb25CYXNpYy52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZsYW5nPXNjc3MmXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2luZGV4LmpzIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTktMiEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tOS0zIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vQWNjb3JkaW9uQmFzaWMudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmbGFuZz1zY3NzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2xvYWRlcnMvc3R5bGVQb3N0TG9hZGVyLmpzIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tOS0yIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS05LTMhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9BY2NvcmRpb25CYXNpYy52dWU/dnVlJnR5cGU9c3R5bGUmaW5kZXg9MCZsYW5nPXNjc3MmXCIiLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5hY2NvcmRpb24tYmFzaWMge1xcbiAgYm9yZGVyLWJvdHRvbTogMXB0IHNvbGlkIHZhcigtLXByaW1hcnktY29sb3ItaGV4KTtcXG59XFxuLmFjY29yZGlvbi1iYXNpYyAuYWNjb3JkaW9uLWJhc2ljLWhlYWRlciB7XFxuICBmb250LWZhbWlseTogXFxcIkJhc2tlcnZpbGxlXFxcIiwgc2Fucy1zZXJpZjtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuLmFjY29yZGlvbi1iYXNpYyAuYWNjb3JkaW9uLWJhc2ljLWNvbnRlbnQge1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuLmFjY29yZGlvbi1iYXNpYyAuYWNjb3JkaW9uLWJhc2ljLWNvbnRlbnQuc2hvdyB7XFxuICAtd2Via2l0LWFuaW1hdGlvbi1uYW1lOiBzaG93QWNjb3JkaWFuO1xcbiAgICAgICAgICBhbmltYXRpb24tbmFtZTogc2hvd0FjY29yZGlhbjtcXG4gIC13ZWJraXQtYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjQ1cztcXG4gICAgICAgICAgYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjQ1cztcXG4gIC13ZWJraXQtYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XFxuICAgICAgICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzO1xcbiAgLXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLWluO1xcbiAgICAgICAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLWluO1xcbiAgZGlzcGxheTogaW5saW5lO1xcbn1cXG4uYWNjb3JkaW9uLWJhc2ljIC5hY2NvcmRpb24tYmFzaWMtY29udGVudC5oaWRlIHtcXG4gIC13ZWJraXQtYW5pbWF0aW9uLW5hbWU6IGhpZGVBY2NvcmRpYW47XFxuICAgICAgICAgIGFuaW1hdGlvbi1uYW1lOiBoaWRlQWNjb3JkaWFuO1xcbiAgLXdlYmtpdC1hbmltYXRpb24tZHVyYXRpb246IDAuNDVzO1xcbiAgICAgICAgICBhbmltYXRpb24tZHVyYXRpb246IDAuNDVzO1xcbiAgLXdlYmtpdC1hbmltYXRpb24tZmlsbC1tb2RlOiBmb3J3YXJkcztcXG4gICAgICAgICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XFxuICAtd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2UtaW4tb3V0O1xcbiAgICAgICAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLWluLW91dDtcXG59XFxuQC13ZWJraXQta2V5ZnJhbWVzIHNob3dBY2NvcmRpYW4ge1xcbmZyb20ge1xcbiAgICBoZWlnaHQ6IDA7XFxuICAgIG9wYWNpdHk6IDA7XFxufVxcbnRvIHtcXG4gICAgaGVpZ2h0OiAxMDAlO1xcbiAgICBvcGFjaXR5OiAxO1xcbn1cXG59XFxuQGtleWZyYW1lcyBzaG93QWNjb3JkaWFuIHtcXG5mcm9tIHtcXG4gICAgaGVpZ2h0OiAwO1xcbiAgICBvcGFjaXR5OiAwO1xcbn1cXG50byB7XFxuICAgIGhlaWdodDogMTAwJTtcXG4gICAgb3BhY2l0eTogMTtcXG59XFxufVxcbkAtd2Via2l0LWtleWZyYW1lcyBoaWRlQWNjb3JkaWFuIHtcXG5mcm9tIHtcXG4gICAgaGVpZ2h0OiAxMDAlO1xcbiAgICBvcGFjaXR5OiAxO1xcbn1cXG50byB7XFxuICAgIGhlaWdodDogMDtcXG4gICAgb3BhY2l0eTogMDtcXG59XFxufVxcbkBrZXlmcmFtZXMgaGlkZUFjY29yZGlhbiB7XFxuZnJvbSB7XFxuICAgIGhlaWdodDogMTAwJTtcXG4gICAgb3BhY2l0eTogMTtcXG59XFxudG8ge1xcbiAgICBoZWlnaHQ6IDA7XFxuICAgIG9wYWNpdHk6IDA7XFxufVxcbn1cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG4iXSwic291cmNlUm9vdCI6IiJ9